// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ExpenseType {
  e
  i
}

model User {
  id String @id @default(uuid())
  name String
  image String?
  email String @unique
  password String
  expenses Expense[]
  tags Tag[]
  wallet Wallet[]
}

model Wallet {
  id String @id @default(uuid())
  name String
  description String?
  balance Int @default(0)
  expenses Expense[]
  user User @relation(fields: [userId], references: [id])
  userId String
}

model Expense {
  id String @id @default(uuid())
  title String
  description String
  total Int
  type ExpenseType
  date DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
  userId String
  expenseTag ExpenseTag[]
  wallet Wallet @relation(fields: [walletId], references: [id])
  walletId String
}

model Tag {
  id String @id @default(uuid())
  name String
  user User @relation(fields: [userId], references: [id])
  userId String
  expenseTag ExpenseTag[]
}

model ExpenseTag {
  id String @id @default(uuid())
  expense Expense @relation(fields: [expenseId], references: [id], onDelete: Cascade)
  expenseId String
  tag Tag @relation(fields: [tagId], references: [id])
  tagId String
}